/**********************************************
 CONTAINER ELEMENTS
**********************************************/
/* Container that wraps the entire table system */
.tableContainer {
  border: 1px solid var(--theme-border-base);
  overflow: hidden;
  background: var(--theme-color-foreground);
}

.tableContainer.none {
  border-radius: 0;
}

.tableContainer.rounded {
  border-radius: var(--border-radius-8, 8px);
}

/* Remove individual borders since container handles the outer border */
.tableContainer .dataTable {
  border: none;
}

.tableContainer .pagination {
  border: none;
  border-top: 1px solid var(--theme-border-base);
}

/* Only add bottom border if pagination exists */
.tableContainer .content:not(:last-child) {
  border-bottom: 1px solid var(--theme-border-base);
}

.content {
  display: block;
  max-height: 800px;
  overflow-y: auto;
  overflow-x: auto;
}

/**********************************************
                TABLE ELEMENT
**********************************************/

.dataTable {
  width: 100%;
  min-width: 500px;
  border-collapse: collapse;
  table-layout: fixed;
  border-spacing: 0;
  font-family: var(--font-family-body);
  border: 1px solid var(--theme-border-base);
}

/**********************************************
                THEAD ELEMENT
**********************************************/

.dataTable thead {
  position: sticky;
  top: -1px;
  z-index: 1;
  background-color: var(--theme-table-header-background-color);
  border-block-end: 1px solid var(--theme-border-base);
  font-size: var(--font-size-body);
  color: var(--theme-text-base);
  padding-inline: 1rem;
  height: 40px;
  box-sizing: border-box;
}

.dataTable thead th {
  padding-inline: 1rem;
  height: 40px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 200px;
  box-sizing: border-box;
  min-width: fit-content;
}

.dataTable thead th .checkboxColumn {
  min-inline-size: 2.5rem;
  padding-inline: 1rem;
  width: 60px;
  height: 60px;
}

/**********************************************
                TH ELEMENT
**********************************************/

.dataTable th,
.dataTableCell {
  text-align: start;
  vertical-align: middle;
}

.dataTable th:last-of-type {
  position: static;
  inline-size: auto;
}

.dataTable th .checkboxColumn {
  position: static;
  inline-size: 2rem;
  transition: background-color 70ms cubic-bezier(0, 0, 0.38, 0.9);
}

.dataTable th:first-child {
  padding-inline-start: 1rem;
}

/* Ensure non-checkbox columns show ellipsis properly */
.dataTable th:not(.checkboxColumn),
.dataTableCell:not(.checkboxColumn) {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.sort {
  cursor: pointer;
  color: var(--theme-text-base);
  border-bottom: 1px solid var(--theme-border-base);
  padding-inline-start: 1rem;
  padding-inline-end: 1rem;
  height: 40px;

  & span {
    font-family: var(--font-family-body);
    font-weight: var(--font-weight-bold);
    color: var(--theme-table-header-text-color);
    display: inline-flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
  }
}

.sortButton {
  background: none;
  border: none;
  padding: 0;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: 4px;
  font: inherit;
  color: inherit;
  width: 100%;
  text-align: left;
  transition: background-color 300ms ease-in;
}

.sortButton:hover {
  opacity: var(--color-neutral-20);
}

.sortButton:focus {
  outline: 2px solid var(--focus-color);
  outline-offset: 2px;
}

.dataTableHeader {
  font-family: var(--font-family-body);
  font-weight: var(--font-weight-bold);
  color: var(--theme-table-header-text-color);
  display: flex;
  align-items: center;
  height: fit-content;
}

.sort .dataTableHeader {
  box-sizing: inherit;
  color: var(--theme-text-base);
  font: inherit;
  inline-size: 100%;
  line-height: 1;
  min-block-size: 100%;
  text-align: start;
  transition:
    background-color 300ms ease-in,
    outline 300ms ease-in;
}

.dataTableHeader > button {
  all: unset;
  display: inline-flex;
  align-items: center;
  justify-content: space-between;
  cursor: pointer;
}

.sortIcon {
  color: var(--theme-icon-inverted);
  height: 24px;
  width: 24px;
  transition: transform 300ms cubic-bezier(0.87, 0, 0.13, 1);
}

.sortIcon[data-state='none'] {
  transform: rotate(0deg);
}

.sortIcon[data-state='ascending'] {
  transform: rotate(180deg);
}

.sortIcon[data-state='descending'] {
  transform: rotate(0deg);
}

.emptyMessageContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.emptyMessage {
  color: var(--theme-text-muted);
  margin: 0;
}

.emptyCell {
  text-align: center;
  padding: 2rem;
  border: none;
  min-height: 400px;
}

/**********************************************
                TBODY ELEMENT
**********************************************/

tbody tr:first-of-type {
  border-top: 1px solid var(--theme-border-base);
}

tbody a {
  color: var(--color-blue-50);
}

/* Drag and Drop States */
.dragOver {
  border-top: 2px solid var(--theme-color-primary);
}

.dragging {
  opacity: 0.5;
  background-color: var(--theme-color-primary);
  cursor: grabbing !important;
}

/**********************************************
                TD ELEMENT
**********************************************/

.dataTableCell {
  min-height: 52px;
  height: 52px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 200px;
  padding-inline: 1rem;

  &:last-child {
    margin-inline-end: var(--space-24);
  }
}

/* Special Cell Types */
.loaderCell {
  text-align: center;
  padding: 2rem;
  border: none;
  min-height: 500px;
}

.errorCell {
  text-align: center;
  padding: 2rem;
  border: none;
  min-height: 400px;
}

.errorMessageContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: var(--space-8);
}

.errorMessageContent {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  gap: var(--space-8);
}

.errorIcon {
  color: var(--color-red-50);
  width: 24px;
}

.errorMessage {
  color: var(--color-red-50);
  margin: 0;
}

/* Cell Content Elements */
.dataTableRow:not(.selected) > .dataTableCell > button {
  background-color: var(--color-white);
  border: 1px solid var(--color-neutral-40);
  color: var(--color-neutral-100);
  width: 100px;
  min-width: 80px;
}

/* Selected state - match CSS module specificity */
.dataTableRow.selected .dataTableCell > button {
  background-color: var(--theme-color-primary) !important;
  border-color: var(--theme-color-primary) !important;
  color: var(--color-white) !important;
}

/* Disabled state - match CSS module specificity */
.dataTableRow.disabled .dataTableCell > button:disabled {
  background-color: var(--color-neutral-30) !important;
  border-color: var(--color-neutral-30) !important;
  color: var(--color-neutral-60) !important;
}

.dataTableRow.disabled > .dataTableCell > input {
  background-color: var(--color-neutral-30);
}

/* Dropdown Triggers */
.dataTableRow > .dataTableCell > .dropdownTrigger {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  background-color: var(--color-transparent, transparent);
  border: 0;
  color: var(--color-neutral-100);
}

.dataTableRow > .dataTableCell:last-child:has(.dropdownTrigger) {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  margin-inline-end: 0px;
  height: 52px;
}

.dataTableRow > .dataTableCell:last-child:has(.dropdownTrigger svg) {
  cursor: pointer;
}

.dataTableRow > .dataTableCell > .dropdownTrigger svg:hover {
  cursor: pointer;
  color: var(--color-neutral-100);
}

.dataTableRow.selected > .dataTableCell > .dropdownTrigger {
  background-color: var(--color-transparent, transparent);
  border: 0;
  color: var(--color-neutral-100);
}

/**********************************************
                CHECKBOX COLUMN
**********************************************/

.checkboxColumn:hover {
  cursor: pointer;
}

.dataTable tbody .dataTableCell .checkboxColumn {
  min-inline-size: 2.5rem;
  padding-inline: 1rem;
  width: 60px;
  height: 60px;
}

/**********************************************
                RESPONSIVE DESIGN
**********************************************/

/* Tablet and smaller desktop screens */
@media (max-width: var(--breakpoint-md)) {
  .dataTable thead th,
  .dataTableCell {
    max-width: 120px;
  }

  /* Keep first column more stable */
  .dataTable thead th:first-child,
  .dataTableCell:first-child {
    min-width: 40px;
    max-width: 150px;
    width: 40px;
  }

  /* Align first column header with checkbox styling when it contains checkboxes */
  .dataTable thead th:first-child.checkboxColumn {
    min-width: 50px;
    max-width: 50px;
    width: 50px;
  }

  .dataTable thead th .checkboxColumn,
  .dataTable tbody .dataTableCell .checkboxColumn {
    width: 50px;
    min-inline-size: 2rem;
  }
}

/* Mobile screens */
@media (max-width: var(--breakpoint-sm)) {
  .dataTable thead th,
  .dataTableCell {
    max-width: 80px;
  }

  /* Keep first column more stable */
  .dataTable thead th:first-child,
  .dataTableCell:first-child {
    min-width: 40px;
    max-width: 120px;
    width: 40px;
  }

  /* Align first column header with checkbox styling when it contains checkboxes */
  .dataTable thead th:first-child.checkboxColumn {
    min-width: 40px;
    max-width: 40px;
    width: 40px;
  }

  .dataTable thead th .checkboxColumn,
  .dataTable tbody .dataTableCell .checkboxColumn {
    width: 40px;
    min-inline-size: 1.5rem;
  }
}

/* Very small screens - allow text wrapping */
@media (max-width: var(--breakpoint-xs)) {
  .dataTable thead th:not(.checkboxColumn),
  .dataTableCell:not(.checkboxColumn) {
    white-space: normal;
    word-break: break-word;
    max-width: 60px;
  }

  /* Keep first column more stable */
  .dataTable thead th:first-child,
  .dataTableCell:first-child {
    min-width: 40px;
    max-width: 100px;
    width: 40px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  /* Align first column header with checkbox styling when it contains checkboxes */
  .dataTable thead th:first-child.checkboxColumn {
    min-width: 35px;
    max-width: 35px;
    width: 35px;
  }

  .dataTable thead th .checkboxColumn,
  .dataTable tbody .dataTableCell .checkboxColumn {
    width: 35px;
    min-inline-size: 1.25rem;
  }
}
