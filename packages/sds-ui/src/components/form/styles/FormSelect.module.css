.selectOuterWrapper {
  display: flex;
  flex-direction: column;
  width: 100%;
  align-items: flex-start;
}

.labelWrapper {
  display: flex;
  justify-content: space-between;
  width: 100%;
  margin-bottom: 8px;
}

.label {
  font-size: var(--font-size-body);
  font-weight: var(--font-weight-bold);
  color: var(--theme-input-label-text-color);
  line-height: var(--font-line-height-condensed);
}

.requiredLabel::after {
  content: '*';
  color: var(--theme-input-error-text-color);
  margin-left: 4px;
}

.select {
  width: 100%;
  height: var(--theme-select-trigger-height);
  padding: 0 40px 0 8px; /* Extra padding on right for custom arrow */
  font-size: var(--font-size-body);
  font-family: var(--font-family-body);
  border: 1px solid var(--theme-select-trigger-border-color);
  border-radius: var(--theme-select-trigger-border-radius);
  background-color: var(--theme-color-component);
  color: var(--theme-select-input-value-color);
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  cursor: pointer;
  position: relative;
}

.select:focus {
  border-color: var(--theme-input-focus-border-color);
  box-shadow: 0 0 0 2px var(--theme-input-focus-box-shadow-color);
  outline: none;
}

.select:disabled {
  color: var(--theme-select-trigger-font-color);
  background-color: var(--theme-select-trigger-disabled-color);
  cursor: not-allowed;
  opacity: 0.6;
}

.invalid {
  border-color: var(--theme-input-error-text-color);
  color: var(--theme-input-error-text-color);
}

.errorMessage {
  margin-top: 8px;
  font-size: var(--font-size-body);
  color: var(--theme-input-error-text-color);
}

.selectContainer {
  position: relative;
  width: 100%;
}

/* Remove triangle arrow CSS, always use custom chevron */

.menu {
  /* This class is for targeting the <select> element for menu styling. */
  /* Note: Styling the native dropdown menu is limited by browsers. */
  /* You can style the <select> box, but not the dropdown list itself in most browsers. */
  /* For full control, use a custom select implementation. */
}

.customChevronWrapper {
  position: absolute;
  right: 12px;
  top: 50%;
  transform: translateY(-50%);
  pointer-events: none;
  z-index: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: transform 150ms ease-in-out;
  color: var(--theme-icon-base);
}

/* Rotate custom chevron on focus/hover */
.selectContainer:has(.select:focus) .customChevronWrapper,
.selectContainer:has(.select:hover) .customChevronWrapper {
  transform: translateY(-50%) rotate(180deg);
}

/* Fallback for browsers that don't support :has() */
.select:focus + .selectContainer::after,
.select:hover + .selectContainer::after {
  transform: translateY(-50%) rotate(180deg);
}
