<?xml version="1.0" encoding="UTF-8"?>
<testExecutions version="1">
  <file path="C:\Users\nicholas.pino\OneDrive - Stretto\Desktop\React Projects\Cadence.Design.System\packages\cds-ui\src\hooks\__tests__\useDataSort.test.ts">
    <testCase name="useDataSort Hook Initialization should initialize with default values" duration="10"/>
    <testCase name="useDataSort Hook Initialization should initialize with provided default sort key" duration="1"/>
    <testCase name="useDataSort Hook Initialization should return unsorted data when not sorted yet" duration="2"/>
    <testCase name="useDataSort Hook Basic Sorting Functionality should sort by string field ascending on first click" duration="10"/>
    <testCase name="useDataSort Hook Basic Sorting Functionality should toggle to descending on second click of same field" duration="3"/>
    <testCase name="useDataSort Hook Basic Sorting Functionality should reset to ascending when clicking different field" duration="2"/>
    <testCase name="useDataSort Hook Data Type Specific Sorting Number Sorting should sort numbers correctly" duration="2"/>
    <testCase name="useDataSort Hook Data Type Specific Sorting Number Sorting should handle optional number fields with null/undefined values" duration="1"/>
    <testCase name="useDataSort Hook Data Type Specific Sorting Numeric String Sorting should sort numeric strings as numbers" duration="1"/>
    <testCase name="useDataSort Hook Data Type Specific Sorting Boolean Sorting should sort boolean values correctly" duration="1"/>
    <testCase name="useDataSort Hook Data Type Specific Sorting Date Sorting should sort Date objects correctly" duration="1"/>
    <testCase name="useDataSort Hook Data Type Specific Sorting Date Sorting should sort date strings correctly" duration="1"/>
    <testCase name="useDataSort Hook Data Type Specific Sorting String Sorting should sort strings with locale-aware comparison" duration="1"/>
    <testCase name="useDataSort Hook Data Type Specific Sorting String Sorting should handle string fields with null values" duration="1"/>
    <testCase name="useDataSort Hook Edge Cases and Error Handling should handle empty arrays" duration="0"/>
    <testCase name="useDataSort Hook Edge Cases and Error Handling should handle invalid sort keys gracefully" duration="3"/>
    <testCase name="useDataSort Hook Edge Cases and Error Handling should handle objects without the sort key" duration="1"/>
    <testCase name="useDataSort Hook Edge Cases and Error Handling should handle mixed data types in the same field" duration="1"/>
    <testCase name="useDataSort Hook Edge Cases and Error Handling should maintain original array immutability" duration="1"/>
    <testCase name="useDataSort Hook Manual Sort Direction Control should allow manual sort direction setting" duration="1"/>
    <testCase name="useDataSort Hook Manual Sort Direction Control should reset to none when manually set" duration="1"/>
    <testCase name="useDataSort Hook Performance and Stability should maintain referential stability of functions" duration="1"/>
    <testCase name="useDataSort Hook Performance and Stability should handle large datasets efficiently" duration="39"/>
    <testCase name="useDataSort Hook Integration Scenarios should work with complex sorting sequences" duration="3"/>
    <testCase name="useDataSort Hook Integration Scenarios should handle dynamic data updates" duration="1"/>
    <testCase name="useDataSort Hook Type Safety and Generics should work with different data types" duration="0"/>
    <testCase name="useDataSort Hook Type Safety and Generics should maintain type safety in returned data" duration="0"/>
  </file>
</testExecutions>